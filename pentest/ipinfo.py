import argparse
import requests

#Hela denna bit klar
class IPInfo:
    def __init__(self, ip, hostname, city, region, country, loc, org, postal, timezone):
        self.ip = ip
        self.hostname = hostname
        self.city = city
        self.region = region
        self.country = country
        self.loc = loc
        self.org = org
        self.postal = postal
        self.timezone = timezone
        
    #Snygga till?
    def __str__(self):
        return f"IP Adress: {self.ip} \nHostname: {self.hostname} \nCity: {self.city} \nRegion: {self.region} \nCountry: {self.country} \nLocation: {self.loc} \nOrganisation: {self.org} \nPostal Code: {self.postal} \nTimezone: {self.timezone}"

#Fixa till s√• att ip tas in m.m
#Exempel ip: 217.215.109.233
def get_ip_info(ip):
    response = requests.get(f"https://ipinfo.io/{ip}/geo")
    if response.status_code == 200:
        data = response.json()
        return IPInfo(data['ip'], data['hostname'], data['city'], data['region'], data['country'], data['loc'], data['org'], data['postal'], data['timezone'],)
    else:
        return "Failed. Make sure you entered a valid public IP address."

#Fixa hela denna bit
def main():
    parser = argparse.ArgumentParser(description="Fetch information from the IPinfo API.")
    parser.add_argument('address', nargs='?', default=None, help='The public IP address to acquire information about')
    parser.add_argument('-i', '--input', type=str, help='runs IP addresses from a file')
    parser.add_argument('-o', '--output', type=str, help='store information in an output file')

    args = parser.parse_args()
    
    if not args.input and args.address is None:
        parser.error('Failed. Either provide an IP address or use the -i option to specify a file with IP addresses.')
    
    try:
        if args.input:
            with open(args.input, 'r') as file:
                content = file.read()
                ip_data = get_ip_info(content)
                print(ip_data)
        else:
            ip_data = get_ip_info(args.address)
            print(ip_data)
            if args.output:
                with open(args.output, 'w') as file:
                    file.write(str(ip_data))
                    print(f"Wrote to file '{args.output}'")
    except :
        print("Failed. Please make sure all arguments are correct.")
    
    #print(get_ip_info(args.address))
    
    #for _ in range(args.number):
    #    print(get_ip_info())

if __name__ == "__main__":
    main()