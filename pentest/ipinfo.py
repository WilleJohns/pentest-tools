import argparse
import requests

#Hela denna bit klar
class IPInfo:
    def __init__(self, ip=None, hostname=None, city=None, region=None, country=None, loc=None, org=None, postal=None, timezone=None):
        self.ip = ip
        self.hostname = hostname
        self.city = city
        self.region = region
        self.country = country
        self.loc = loc
        self.org = org
        self.postal = postal
        self.timezone = timezone
        
    #Snygga till?
    def __str__(self):
        return f"IP Adress: {self.ip} \nHostname: {self.hostname} \nCity: {self.city} \nRegion: {self.region} \nCountry: {self.country} \nLocation: {self.loc} \nOrganisation: {self.org} \nPostal Code: {self.postal} \nTimezone: {self.timezone}"


#Exempel ip: 217.215.109.233
def get_ip_info(ip_address):
    response = requests.get(f"https://ipinfo.io/{ip_address}/geo")
    if response.status_code == 200:
        data = response.json()
        return IPInfo(data.get('ip'), data.get('hostname'), data.get('city'), data.get('region'), data.get('country'), data.get('loc'), data.get('org'), data.get('postal'), data.get('timezone'))
    else:
        return "Failed. Make sure you entered a valid public IP address."


#Relativt klar, lägga till funktion för att slippa upprepa?
def main():
    parser = argparse.ArgumentParser(description="Fetch information from the IPinfo API.")
    parser.add_argument('address', nargs='?', default=None, help='The public IP address to acquire information about')
    parser.add_argument('-i', '--input', type=str, help='runs IP addresses from a file')
    parser.add_argument('-o', '--output', type=str, help='store information in an output file')

    args = parser.parse_args()
    
    if not args.input and args.address is None:
        parser.error('Failed. Either provide an IP address or use the -i option to specify a file with IP addresses.')
    
    #try:
    if args.input and args.output:
        with open(args.input, 'r') as file:
            for line in file:
                ip_address = line.strip()
                ip_data = get_ip_info(ip_address)
                print(ip_data, "\n")
                with open(args.output, 'a') as file:
                    file.write(str(ip_data) + "\n\n")
                    print(f"Wrote to file '{args.output}'")
    elif args.input:
        with open(args.input, 'r') as file:
            for line in file:
                ip_address = line.strip()
                ip_data = get_ip_info(ip_address)
                print(ip_data, "\n")
    else:
        ip_data = get_ip_info(args.address)
        print(ip_data)
        if args.output:
            with open(args.output, 'a') as file:
                file.write(str(ip_data) + "\n\n")
                print(f"Wrote to file '{args.output}'")
    #except :
    #    print("Failed. Please make sure all arguments are correct.")
    

if __name__ == "__main__":
    main()